name: Terraform Infra Update
# This workflow is triggered on changes to the Terraform configuration files
# in the specified directory. It initializes the Terraform backend and
# migrates the state to a new backend if necessary.
# It also validates the Terraform configuration and lists the resources in the state.
# The workflow is triggered manually or on pushes to the main branch.
# It uses AWS credentials and Terraform backend configuration stored in GitHub secrets.
# The workflow runs on the latest Ubuntu environment and uses the AWS CLI and Terraform CLI.
# The workflow consists of several steps:
# 1. Checkout the repository
# 2. Configure AWS credentials using the AWS role to assume
# 3. Setup Terraform with the specified version
# 4. Generate the backend configuration file from a template
# 5. Initialize the Terraform backend
# 6. Apply the Terraform configuration to migrate the state
# 7. Validate the Terraform configuration
# 8. List the resources in the Terraform state

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'infra/aws/project/init/**'
      - '.github/workflows/terraform-init.yml'

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Init and Migrate Terraform Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: infra/aws/project/init

    env:
      AWS_REGION: eu-central-1
      TF_BACKEND_BUCKET: ${{ secrets.TF_BACKEND_BUCKET }}
      TF_BACKEND_KEY: ${{ secrets.TF_BACKEND_KEY }}
      TF_BACKEND_REGION: ${{ secrets.TF_BACKEND_REGION }}
      TF_BACKEND_LOCK_TABLE: ${{ secrets.TF_BACKEND_LOCK_TABLE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Generate backend.tf from template
        run: |
          envsubst < backend.tf.tmpl > backend.tf

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Validate Terraform Configuration
        run: terraform validate

      - name: List Terraform Resources
        run: terraform state list || echo "No resources found"
