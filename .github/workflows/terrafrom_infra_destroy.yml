name: üß® DESTROY INFRA ‚Äì Manual Only

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type YES_I_UNDERSTAND to confirm infrastructure destruction"
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  destroy:
    name: üß® Destroy Terraform Infrastructure (with S3 backend)
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: infra/aws/project/init

    env:
      AWS_REGION: eu-central-1
      TF_BACKEND_REGION: eu-central-1
      TF_BACKEND_KEY: project/init/terraform.tfstate
      TF_BACKEND_BUCKET: ${{ secrets.TF_BACKEND_BUCKET }}
      TF_BACKEND_LOCK_TABLE: ${{ secrets.TF_BACKEND_LOCK_TABLE }}

    steps:
      - name: ‚ö†Ô∏è WARNING ‚Äì Manual Use Only
        run: |
          echo "::warning ::This workflow will destroy infrastructure in AWS!"
          echo "::warning ::Only run if you are absolutely sure."

      - name: Validate confirmation input
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "YES_I_UNDERSTAND" ]; then
            echo "::error ::Invalid confirmation. Type YES_I_UNDERSTAND to proceed."
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Step 1 ‚Äì Generate backend.tf
        run: |
          envsubst < backend.tf.tmpl > backend.tf

      - name: Step 2 ‚Äì Terraform Init (S3 backend)
        run: terraform init -input=false

      - name: Step 3 ‚Äì Terraform Destroy
        run: terraform destroy -auto-approve

      - name: Step 4 ‚Äì Sanity Check ‚Äì Verify state
        run: |
          if terraform state list | grep .; then
            echo "::warning ::Some resources are still present in the state:"
            terraform state list
          else
            echo "‚úÖ State is empty. All resources destroyed."
          fi
